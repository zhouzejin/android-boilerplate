apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.sunny.main"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCode
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName rootProject.ext.versionName
    }

    signingConfigs {
        // 读取release版本的签名文件
        Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('../local.properties')))

        Properties keyProps = new Properties()
        if (localProps['keystore.properties.file']) {
            keyProps.load(new FileInputStream(file(localProps['keystore.properties.file'])))
        } else {
            // 如果读取不到'keystore.props.file'属性，就使用默认的debug keystore
            keyProps["store"] = '../debug.keystore'
            keyProps["alias"] = 'androiddebugkey'
            keyProps["storePass"] = 'android'
            keyProps["pass"] = 'android'
        }

        release {
            // release版本使用assert确保存在该属性否则报错，避免错误打包
            assert localProps['keystore.properties.file'] != null

            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            signingConfig signingConfigs.debug

            versionNameSuffix "Debug"
            debuggable true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

apply plugin: 'replugin-plugin-gradle'

repluginPluginConfig {

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':componentCommonBusiness')
    implementation project(':componentDataLayer')

    annotationProcessor rootProject.ext.dagger["dagger-compiler"]
    annotationProcessor rootProject.ext.utils["butterknife-compiler"]

    implementation rootProject.ext.utils["replugin-plugin-lib"]
}
